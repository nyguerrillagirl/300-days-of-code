// pixel shader

#ifdef GL_ES
   #ifdef GL_FRAGMENT_PRECISION_HIGH   
      precision highp float;
   #else
      precision mediump float;
   #endif
#endif

uniform sampler2D texture0;
uniform sampler2D texture1;

varying vec2 uvVarying;
varying vec3 normalVarying;
varying vec3 posVarying;

uniform vec4 PLightPos;
uniform vec4 PLightCol;

uniform vec4 agk_ObjColor;

void main()
{
	float Ambient=0.25;
	vec3 norm = normalize(normalVarying);

	// point light
	vec3 dir = PLightPos.xyz - posVarying;
	float atten = dot(dir,dir);
	atten = clamp(PLightPos.w/atten,0.0,1.0);
	float intensity = max(0.0,dot(normalize(dir),norm));
	intensity = clamp(intensity,0.0,1.0);
	vec3 color = PLightCol.rgb * intensity * atten;

	
	vec4 IlluminateTexture = texture2D(texture1, uvVarying);
	if (IlluminateTexture.r > 0.1)
	{
		gl_FragColor = texture2D(texture0, uvVarying) * IlluminateTexture * agk_ObjColor;
	}
	else
	{
		vec4 finalColor = clamp(vec4(color,1),Ambient,1.0);
		gl_FragColor = texture2D(texture0, uvVarying) * finalColor;
	}
}
